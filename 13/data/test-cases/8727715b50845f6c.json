{"uid":"8727715b50845f6c","name":"test_autocomplete","fullName":"tests.test_edit#test_autocomplete","historyId":"116b21cd5116ce076d64042c4703a3e3","time":{"start":1718209478694,"stop":1718209478694,"duration":0},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error:  for url: http://localhost:4001/users/signup","statusTrace":"chrome_browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"371516c44a419e41ed8cdafc4e63357e\")>\n\n    @pytest.fixture\n    def logged_in_test(chrome_browser: webdriver):\n>       user = setup_test_user()\n\ntests/conftest.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:45: in setup_test_user\n    register_response = SignUp().api_call(user)\napi/post_sign_up.py:7: in api_call\n    response = self.make_request(\"POST\", \"users/signup\", json=user_data)\napi/base_api.py:33: in make_request\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error:  for url: http://localhost:4001/users/signup\n\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/models.py:1021: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1718209477165,"stop":1718209477182,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"chrome_browser","time":{"start":1718209478695,"stop":1718209479844,"duration":1149},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"logged_in_test","time":{"start":1718209479845,"stop":1718209479856,"duration":11},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error:  for url: http://localhost:4001/users/signup\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1132, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 906, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-e2e-localstack-tests/python-e2e-localstack-tests/tests/conftest.py\", line 35, in logged_in_test\n    user = setup_test_user()\n           ^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-e2e-localstack-tests/python-e2e-localstack-tests/tests/conftest.py\", line 45, in setup_test_user\n    register_response = SignUp().api_call(user)\n                        ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-e2e-localstack-tests/python-e2e-localstack-tests/api/post_sign_up.py\", line 7, in api_call\n    response = self.make_request(\"POST\", \"users/signup\", json=user_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-e2e-localstack-tests/python-e2e-localstack-tests/api/base_api.py\", line 33, in make_request\n    response.raise_for_status()\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/models.py\", line 1021, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"testStage":{"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error:  for url: http://localhost:4001/users/signup","statusTrace":"chrome_browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"371516c44a419e41ed8cdafc4e63357e\")>\n\n    @pytest.fixture\n    def logged_in_test(chrome_browser: webdriver):\n>       user = setup_test_user()\n\ntests/conftest.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:45: in setup_test_user\n    register_response = SignUp().api_call(user)\napi/post_sign_up.py:7: in api_call\n    response = self.make_request(\"POST\", \"users/signup\", json=user_data)\napi/base_api.py:33: in make_request\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error:  for url: http://localhost:4001/users/signup\n\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/models.py:1021: HTTPError","steps":[],"attachments":[{"uid":"e8ffb17ce0bc1499","name":"log","source":"e8ffb17ce0bc1499.txt","type":"text/plain","size":1427}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"chrome_browser::0","time":{"start":1718209479876,"stop":1718209479931,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_edit"},{"name":"host","value":"fv-az1210-979"},{"name":"thread","value":"3401-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_edit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":13,"unknown":0,"total":14},"items":[{"uid":"93c0335bce8e81fe","reportUrl":"https://MartaByl.github.io/python-e2e-localstack-tests/12//#testresult/93c0335bce8e81fe","status":"passed","time":{"start":1718008860970,"stop":1718008861856,"duration":886}},{"uid":"3d7f3ca8ab663692","reportUrl":"https://MartaByl.github.io/python-e2e-localstack-tests/11//#testresult/3d7f3ca8ab663692","status":"passed","time":{"start":1718007099709,"stop":1718007100652,"duration":943}},{"uid":"ddf45580c98a850","reportUrl":"https://MartaByl.github.io/python-e2e-localstack-tests/10//#testresult/ddf45580c98a850","status":"passed","time":{"start":1718006398985,"stop":1718006399671,"duration":686}},{"uid":"8913c39af57e45ec","reportUrl":"https://MartaByl.github.io/python-e2e-localstack-tests/10//#testresult/8913c39af57e45ec","status":"passed","time":{"start":1718005994339,"stop":1718005995013,"duration":674}},{"uid":"fad66b9695033ccd","reportUrl":"https://MartaByl.github.io/python-e2e-localstack-tests/9//#testresult/fad66b9695033ccd","status":"passed","time":{"start":1718005060618,"stop":1718005061286,"duration":668}},{"uid":"66b189b2d3cfefd5","reportUrl":"https://MartaByl.github.io/python-e2e-localstack-tests/8//#testresult/66b189b2d3cfefd5","status":"passed","time":{"start":1717926671068,"stop":1717926671851,"duration":783}},{"uid":"caa99125a9b69f95","reportUrl":"https://MartaByl.github.io/python-e2e-localstack-tests/7//#testresult/caa99125a9b69f95","status":"passed","time":{"start":1717926540372,"stop":1717926541050,"duration":678}},{"uid":"c056bcf8df99dc83","reportUrl":"https://MartaByl.github.io/python-e2e-localstack-tests/6//#testresult/c056bcf8df99dc83","status":"passed","time":{"start":1717661382518,"stop":1717661383291,"duration":773}},{"uid":"565b6b5e30c8a5dd","reportUrl":"https://MartaByl.github.io/python-e2e-localstack-tests/5//#testresult/565b6b5e30c8a5dd","status":"passed","time":{"start":1717661035056,"stop":1717661035726,"duration":670}},{"uid":"6e5bb2ce63b927a8","reportUrl":"https://MartaByl.github.io/python-e2e-localstack-tests/4//#testresult/6e5bb2ce63b927a8","status":"passed","time":{"start":1717660472341,"stop":1717660473333,"duration":992}},{"uid":"c17f0c98e04c9534","reportUrl":"https://MartaByl.github.io/python-e2e-localstack-tests/3//#testresult/c17f0c98e04c9534","status":"passed","time":{"start":1717658299087,"stop":1717658299756,"duration":669}},{"uid":"957de5bacd9ee1f9","reportUrl":"https://MartaByl.github.io/python-e2e-localstack-tests/2//#testresult/957de5bacd9ee1f9","status":"passed","time":{"start":1717612421671,"stop":1717612422481,"duration":810}},{"uid":"d7103b23d3a90af6","reportUrl":"https://MartaByl.github.io/python-e2e-localstack-tests/1//#testresult/d7103b23d3a90af6","status":"passed","time":{"start":1717584800363,"stop":1717584801042,"duration":679}}]},"tags":[]},"source":"8727715b50845f6c.json","parameterValues":[]}